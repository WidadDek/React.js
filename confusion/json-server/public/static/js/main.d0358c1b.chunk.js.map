{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","CommentForm","handleSubmitComment","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","newComment","toISOString","method","headers","credentials","addComment","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0358c1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n/** Fonctional Component Version **/\r\nfunction RenderMenuItem ({dish}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >                    \r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n\r\n/** Presentational Component Version **/\r\n/*\r\nclass Menu extends Component {\r\n    render() {\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card key={dish.id} \r\n                        onClick={() => this.props.onClick(dish.id)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu; */","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }    \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Dz-Restaurant' />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Dz-Restaurant</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Dz-Restaurant</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(<Loading />);\r\n    }\r\n    else if (errMess) {\r\n        return(<h4>{errMess}</h4>);\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                            isLoading={props.dishesLoading} \r\n                            errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                            isLoading={props.promoLoading} \r\n                            errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                                isLoading={props.leaderLoading} \r\n                                errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;   ","import React, { Component } from 'react';\r\n/*import { Breadcrumb, BreadcrumbItem,\r\n    Button, Form, FormGroup, Label, Input, Col,Row, FormFeedback } from 'reactstrap';*/\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\n//import { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// Validation rules\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        /*this.state = {\r\n            //init form inputs\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }*/\r\n\r\n        //this.handleInputChange = this.handleInputChange.bind(this); //handling state change\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    /*handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }*/\r\n\r\n    /* Before Redux\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }*/\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n    /*handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }*/\r\n\r\n   /* validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    */\r\n    render(){\r\n        /*const errors = this.validate(this.state.firstname, \r\n            this.state.lastname, this.state.telnum, this.state.email); */\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                      <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n\r\n/* Controlled Form              \r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    */","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderLeader({leader}){\r\n    return(\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {props.leaders.leaders.map((leader) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <RenderLeader leader={leader} />\r\n                                    </Fade>\r\n                                )}\r\n                            )}\r\n                        </Stagger> \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Modal, \r\n    ModalHeader, ModalBody, Label, Row, Col\r\n    ,Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n// Validation rules\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen : false,\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        //this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\r\n    }\r\n\r\n    handleSubmitComment(values) {\r\n        //Save Comment\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        //this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        //Close Modal\r\n        this.toggleModal();\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        //event.preventDefault();\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> \r\n                {' '}Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>               \r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>            \r\n            </div>\r\n        )\r\n    }\r\n}  \r\n\r\nfunction RenderDish({dish}) {\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n//function RenderComments({comments, addComment, dishId}) {\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                  <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                  </Stagger>           \r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    console.log(props);\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} /> \r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container\"><div></div></div>\r\n        );\r\n    }\r\n}\r\nexport default DishDetail;\r\n\r\n/*\r\nclass Dishdetail extends Component {\r\n    renderDish(dish) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderComments(comments) {\r\n        if (comments != null) {\r\n            const commentss = comments.map((comment) => {\r\n                return(\r\n                    <li>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author}, \r\n                            {new Intl.DateTimeFormat('en-US', {\r\n                                year: 'numeric', \r\n                                month: 'short', \r\n                                day: '2-digit'}).format(\r\n                                    new Date(Date.parse(comment.date)\r\n                                    )\r\n                                )}</p>\r\n                    </li>\r\n                );\r\n            });\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {commentss}                   \r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if(this.props.dish != null){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        { this.renderDish(this.props.dish) } \r\n                        { this.renderComments(this.props.dish.comments) }         \r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div className=\"container\"><div></div></div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Dishdetail;\r\n\r\n*/","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n/* Dishes */\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n/* Comments */\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString(); \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { \r\n            console.log('post comments', error.message); \r\n            alert('Your comment could not be posted\\nError: '+ error.message); \r\n    });\r\n};\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n/* Promos */\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n/* Leaders */\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n/* Post feedback */\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString(); \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => { \r\n            console.log('post feedbacks', error.message); \r\n            alert('Your feedback could not be posted\\nError: '+ error.message); \r\n    });\r\n};\r\n    /* Basic Action */\r\n/* export const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n}); */\r\n\r\n","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n//action creators\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\n\r\n\r\n// Map the redux's store state into propos to make'em available for components\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n// Adds action creators to make'em accesible from component's props\r\nconst mapDispatchToProps = dispatch => ({\r\n    /*addComment: (dishId, rating, author, comment) => \r\n                dispatch(addComment(dishId, rating, author, comment)),*/\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    postComment: (dishId, rating, author, comment) => \r\n                dispatch(postComment(dishId, rating, author, comment)),\r\n    \r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) =>\r\n                dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n  });\r\n\r\nclass Main extends Component {\r\n    /*onDishSelect(dishId) {\r\n        this.setState({ selectedDish: dishId});\r\n    }*/\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n                \r\n        //in fact there is 3 props in the functional component : match,location,history\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                    //addComment={this.props.addComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch location={this.props.location}>\r\n                        <Route path='/home' component={HomePage} />\r\n                        <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                        <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                        <Route path='/menu/:dishId' component={DishWithId} />\r\n                        <Route exact path='/contactus' component={() => <Contact \r\n                                            resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                            postFeedback={this.props.postFeedback}\r\n                                            />} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n            );\r\n    }\r\n}\r\n//when using redux u have to update the export from this \r\n        /* export default Main; */\r\n// to this\r\n        /* export default withRouter(connect(mapStateToProps)(Main)); */\r\n// when using actions wih redux you should use this\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n/*\r\n                <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n                <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n\r\n\r\n            <Navbar dark color=\"primary\">\r\n                <div className=\"container\">\r\n                    <NavbarBrand href=\"/\">Dz-Restaurant</NavbarBrand>\r\n                </div>\r\n            </Navbar>\r\n                \r\n            \r\n    render() {\r\n        return (\r\n        <div>\r\n            <Header />\r\n            <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n            <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n            <Footer />\r\n\r\n        </div>\r\n        );\r\n    }\r\n            */","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n    state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes:[] },\r\n    action) => {\r\n            switch (action.type) {\r\n                case ActionTypes.ADD_DISHES:\r\n                    return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n                case ActionTypes.DISHES_LOADING:\r\n                    return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n                case ActionTypes.DISHES_FAILED:\r\n                    return {...state, isLoading: false, errMess: action.payload};\r\n\r\n                default:\r\n                    return state;\r\n            }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {  errMess: null, \r\n                                    comments:[] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n        return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\n\nclass App extends Component {  \n    render(){\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>                     \n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\n\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}